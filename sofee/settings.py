"""
Django settings for [So]cialmeida [Fee]d project.

Generated by 'django-admin startproject' using Django 1.9.

For more information on this file, see
https://docs.djangoproject.com/en/1.9/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.9/ref/settings/
"""
from __future__ import absolute_import

import os
from celery.schedules import crontab


def get_env(key):
    value = os.getenv(key)
    assert value, 'Set {} environment variable'
    return value

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.9/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = get_env('DJANGO_SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',
    'djcelery',
    'rest_framework',
]

INSTALLED_APPS += [
    'feeds'
]

MIDDLEWARE_CLASSES = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

AUTHENTICATION_BACKENDS = (
    'django.contrib.auth.backends.ModelBackend',
)

ROOT_URLCONF = 'sofee.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'sofee.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.9/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': os.getenv('ENGINE') or 'django.db.backends.postgresql_psycopg2',
        'NAME': os.getenv('DB_NAME') or 'travis_ci',
        'USER': os.getenv('DB_USER') or 'postgres',
        'PASSWORD': os.getenv('USER_PASS') or '',
        'HOST': os.getenv('DB_HOST') or '127.0.0.1',
        'PORT': os.getenv('DB_PORT') or 5432,
    }
}

# Password validation
# https://docs.djangoproject.com/en/1.9/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.9/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

STATIC_URL = '/static/'
STATIC_ROOT = 'media/static'
BROKER_URL = 'redis://localhost:6379/0'

STATICFILES_FINDERS = [
    'django.contrib.staticfiles.finders.FileSystemFinder',
    'django.contrib.staticfiles.finders.AppDirectoriesFinder',
]

CELERY_RESULT_BACKEND = 'redis://localhost:6379/0'
CELERY_ROUTES = {
    'feeds.tasks.update_feed': {'queue': 'feed_queue'},
    'feeds.tasks.update_accounts_task': {'queue': 'default'},
    'feeds.tasks.update_user_cache': {'queue': 'default'},
    'feeds.tasks.fetch_links': {'queue': 'fetch_link'},
    'feeds.tasks.update_rss_task': {'queue': 'rss_queue'},
}

CELERY_TIMEZONE = 'Asia/Calcutta'
CELERY_ENABLE_UTC = True
CELERYBEAT_SCHEDULE = {
    # Executes updates every 3 hours
    'update-feeds': {
        'task': 'feeds.tasks.update_accounts_task',
        'schedule': crontab(minute='0', hour='*/2'),
    },
}

# Twitter settings
TWITTER_CONSUMER_KEY = get_env('TWITTER_CONSUMER_KEY')
TWITTER_CONSUMER_SECRET = get_env('TWITTER_CONSUMER_SECRET')

REST_FRAMEWORK = {
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'PAGE_SIZE': 100,
}
